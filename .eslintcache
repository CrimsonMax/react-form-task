[{"C:\\GitHub\\react-form-task\\src\\index.js":"1","C:\\GitHub\\react-form-task\\src\\App.js":"2","C:\\GitHub\\react-form-task\\src\\reportWebVitals.js":"3","C:\\GitHub\\react-form-task\\src\\components\\FormControl.js":"4"},{"size":287,"mtime":1611253911004,"results":"5","hashOfConfig":"6"},{"size":3293,"mtime":1611357397344,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1674,"mtime":1611356989280,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"esmf9m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\GitHub\\react-form-task\\src\\index.js",[],["20","21"],"C:\\GitHub\\react-form-task\\src\\App.js",[],"C:\\GitHub\\react-form-task\\src\\reportWebVitals.js",[],"C:\\GitHub\\react-form-task\\src\\components\\FormControl.js",["22","23","24"],"const form = document.querySelector('#form')\r\nconst username = document.querySelector('#username')\r\nconst email = document.querySelector('#email')\r\nconst password = document.querySelector('#password')\r\nconst password2 = document.querySelector('#password2')\r\n\r\nexport default function checkInputs() {\r\n    const usernameValue = username.value.trim()\r\n    const emailValue = email.value.trim()\r\n    const passwordValue = password.value.trim()\r\n    const password2Value = password2.value.trim()\r\n\r\n    if (usernameValue === '') {\r\n        setErrorFor(username, 'Username cannot be blank!')\r\n    } else {\r\n        setSuccessFor(username)\r\n    }\r\n\r\n    if (emailValue === '') {\r\n        setErrorFor(email, 'Email needed!')\r\n    } else if (!isEmail(emailValue)) {\r\n        setErrorFor(email, 'Email is not valid!')\r\n    } else {\r\n        setSuccessFor(email)\r\n    }\r\n\r\n    if (passwordValue === '') {\r\n        setErrorFor(password, 'Input password!')\r\n    } else if (!passLength(passwordValue)) {\r\n        setErrorFor(password, 'Password must be no less than 4 characters!')\r\n    } else {\r\n        setSuccessFor(password)\r\n    }\r\n\r\n    if (password2Value === '') {\r\n        setErrorFor(password2, 'Repeat password!')\r\n    } else if (passwordValue !== password2Value) {\r\n        setErrorFor(password2, 'Password wrong!')\r\n    } else {\r\n        setSuccessFor(password2)\r\n    }\r\n}\r\n\r\nfunction setErrorFor(input, message) {\r\n    const formControl = input.parentElement\r\n    const small = formControl.querySelector('small')\r\n\r\n    small.innerText = message\r\n\r\n    formControl.className = 'form-control error'\r\n}\r\n\r\nfunction setSuccessFor(input) {\r\n    const formControl = input.parentElement\r\n    formControl.className = 'form-control success'\r\n}\r\n\r\nfunction isEmail(email) {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\nfunction passLength(passwordValue) {\r\n    let x = passwordValue.split('')\r\n    console.log(x)\r\n    console.log(x.length)\r\n    if (x.length > 3) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":7,"nodeType":"31","messageId":"32","endLine":1,"endColumn":11},{"ruleId":"33","severity":1,"message":"34","line":59,"column":22,"nodeType":"35","messageId":"36","endLine":59,"endColumn":23,"suggestions":"37"},{"ruleId":"33","severity":1,"message":"34","line":59,"column":47,"nodeType":"35","messageId":"36","endLine":59,"endColumn":48,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'form' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["41","42"],["43","44"],"no-global-assign","no-unsafe-negation",{"messageId":"45","fix":"46","desc":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"45","fix":"51","desc":"47"},{"messageId":"48","fix":"52","desc":"50"},"removeEscape",{"range":"53","text":"54"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"55","text":"56"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"57","text":"54"},{"range":"58","text":"56"},[1787,1788],"",[1787,1787],"\\",[1812,1813],[1812,1812]]